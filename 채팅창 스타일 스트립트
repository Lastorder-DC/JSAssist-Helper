//설정 변수 선언
window.config = {};
window.config.allowTag = true; // 이미지, 스타일, 디시콘등 허용여부. 금지하려면(JSAssist build 17.1 이상 기본설정) false로 변경
window.config.autoReset = false; // [사용안함] 자동리셋 설정 더이상 사용안함
window.config.allowExternalSource = false; //외부이미지([img 주소] 문법) 허용하려면 true로 변경
window.config.allowDCCon = true; //디시콘 사용가능유무 사용금지로 바꾸려면 false로 설정

//채팅수 관련 설정
window.chat = {};
window.chat.count = 0;
window.chat.maxcount = 50;

function replaceQuote(match, message, offset, string) {
    return '"message" : "' + message.replace('"',"\\\"") + '", "type"';
}

function FixJSAssistBug(json_string) {
    // 트위치에서 이모티콘 입력시 앞뒤로 붙는 쓸데없는 것을 이모티콘 시동어로 적절히 바꿔준다
    // 이모티콘으로 트위치 이모티콘 영문명을 추가해주면 잘 동작함
    json_string = json_string.replace(decodeURIComponent("%20%20%20%20%0D%0A"),"~");
    json_string = json_string.replace(decodeURIComponent("%0D%0A"),"");
    
    // JSAssist에서 " 들어간 채팅을 부적절하게 처리해 발생하는 문제 수정
    json_string = json_string.replace(/"message" : "((.|[\r\n])*)", "type"/,replaceQuote);

    return json_string;
}

// 채팅창 연결 스크립트 Lastorder-DC 버전
// 트위치에서 쓸데없이 보내주는 줄바꿈 문자를 적당히 바꿔줌
is_connected_lastorder = false;
is_init_oldver_lastorder = false;
function connect_jsassist_lastorder() {
    var ws = new WebSocket("ws://localhost:4649/JSAssistChatServer");
    ws.onopen = function () {
        is_connected_lastorder = true;
    };
    ws.onmessage = function (evt) {
        var data = JSON.parse(FixJSAssistBug(evt.data));
        if (data.type == "chat_message") {
            if (platform != "all") {
                if (platform != data.platform) {
                    return;
                }
            }
            addChatMessage_lastorder(data.platform, data.username, data.message);
        } else if (data.type == "config") {
            setConfig(data);
        } else {
            if (data.type == undefined) {
                if (is_init_oldver_lastorder == false) {
                    platformIcon = true;
                    platform = "all";
                    animation = "fade";
                    chatFade = chat_fade;
                    font = "Jeju Gothic";
                    fontUsernameSize = 14;
                    fontUsernameColor = "255, 255, 255";
                    fontChatSize = 16;
                    fontChatColor = "255, 255, 255";
                    backgroundColor = "255, 255, 255";
                    backgroundAlpha = 0;
                    chatBackgroundColor = "255, 255, 255";
                    chatBackgroundAlpha = 0.25;
                    is_init_oldver_lastorder = true;
                }
                addChatMessage(data.platform, data.username, data.message);
            }
        }
    };
    ws.onclose = function () {
        is_connected_lastorder = false;
        setTimeout(connect_jsassist, 1000);
    };
}

// JSAssist 패치되서 HTML 선택허용 되면 아래 함수는 지워도됨
function addChatMessage2(platform, nickname, message) {
    var style = "style='display:none; '";
    var stylePlatform = "chat_platform_";
    if (platformIcon) {
        stylePlatform += platform;
    } else {
        stylePlatform += "none";
    }
    var chatNickname;
    var msg = "";
    var chatMessage;
    var $chatElement;

    chatNickname = "<span class='" + stylePlatform + "'" + style + "/><span class='chat_text_nickname' style='display:none'>" + nickname + "</span>";
    if(window.config.allowTag) msg = $("<div>" + message + "</div>").html();
    else  msg = $("<div>" + message + "</div>").text();
    chatMessage = "<div class='chat_text_message' style='display:none'>" + msg + "</div>";
    $chatElement = $(chatNickname + chatMessage + "</div>");

    $chatElement.appendTo($(".chat_container"));
    updateStyle();
    if (animation == "none") {
        $chatElement.show();
    } else {
        $chatElement.show(animation, {easing: "easeOutQuint", direction: "down"});
    }

    window.chat.count++;
    if (chatFade != 0) {
        var fadeTime = chatFade * 1000;
        if (animation == "none") {
            $chatElement.delay(fadeTime).hide(0, function () {
                $(this).remove();
                window.chat.count--;
            });
        } else {
            $chatElement.delay(fadeTime).hide(animation, 1000, function () {
                $(this).remove();
                window.chat.count--;
            });
        }
    } else {
        if (window.chat.count > window.chat.maxcount) {
            window.chat.count--;
            $remove_temp = $(".chat_container span:first-child");
            $remove_temp.next().remove();
            $remove_temp.next().remove();
            $remove_temp.remove();
        }
    }
}

addChatMessage = function(){};

//새로 만들 채팅 함수
//닉네임, 채팅에 적절한 처리를 거친 뒤 원본 채팅함수로 보낸다
function addChatMessage_lastorder(platform, nickname, message) {
    // 닉네임 HTML 제거
    nickname = htmlEntities(nickname);

    // 메세지 HTML 제거
    message = htmlEntities(message);

    // 메세지 안 디시콘 변환(시동어 ~ 입력후 등록한 이모티콘 이름 입력하면 됨)
    if(window.config.allowDCCon) message = message.replace(/~([^\ ~]*)/g,replaceDCCon);

    // marquee 태그 변환
    message = message.replace(/\[mq( direction=[^\ ]*)?( behavior=[^\ ]*)?( loop=[^\ ]*)?( scrollamount=[^\ ]*)?( scrolldelay=[^\ ]*)?\](.*)\[\/mq\]/g,replaceMarquee);

    //기본문법 변환
    message = replaceStyle(message);

    return addChatMessage2(platform, nickname, message);
};

function replaceStyle(message) {
    //외부 이미지 문법(기본 비활성화 상태로 상단 설정변수를 true로 바꿔 활성화 가능)
    if(window.config.allowExternalSource) message = message.replace(/\[img ([^\]\"]*)\]/g,"<img src=\"$1\" />");

    //닫는태그가 지정된 [b][i][s]
    message = message.replace(/\[b\](.*)\[\/b\]/g,"<b>$1</b>"); //볼드 [b]blah[/b]
    message = message.replace(/\[i\](.*)\[\/i\]/g,"<i>$1</i>"); //이탤릭 [i]blah[/i]
    message = message.replace(/\[s\](.*)\[\/s\]/g,"<strike>$1</strike>"); //취소선 [s]blahp[/s]

    // 나무위키식
    message = message.replace(/'''(.*)'''/g,"<b>$1</b>");
    message = message.replace(/''(.*)''/g,"<i>$1</i>");
    message = message.replace(/~~(.*)~~/g,"<strike>$1</strike>");
    message = message.replace(/--(.*)--/g,"<strike>$1</strike>");
    message = message.replace(/__(.*)__/g,"<u>$1</u>");

    //닫는 태그가 없는 [b][i][s]
    message = message.replace(/\[b\](.*)/g,"<b>$1</b>"); //볼드 [b]blah
    message = message.replace(/\[i\](.*)/g,"<i>$1</i>"); //이탤릭 [i]blah
    message = message.replace(/\[s\](.*)/g,"<strike>$1</strike>"); //취소선 [s]blah

    return message;
}

function replaceMarquee(match,direction,behavior,loop,scrollamount,scrolldelay,body,offset) {
    //빈 값 확인
    if(typeof direction == "undefined") direction = "";
    if(typeof behavior == "undefined") behavior = "";
    if(typeof loop == "undefined") loop = "";
    if(typeof scrollamount == "undefined") scrollamount = "";
    if(typeof scrolldelay == "undefined") scrolldelay = "";

    //내용이 빈 mq 태그는 무의미하므로 리턴
    if(typeof body == "undefined") return "";

    var scrollamount_value = scrollamount.replace(/[^0-9]/g,"");

    //scrollamount 값을 50 이하로 제한함(50이 넘으면 50으로 강제 하향조정)
    if(scrollamount_value > 50) scrollamount = ' scrollamount=50';
    return '<marquee' + direction + behavior + loop + scrollamount + scrolldelay + '>' + body + '</marquee>';
}

function replaceDCCon(match,dcconkey,offset) {
    //https://static-cdn.jtvnw.net/emoticons/v1/145315/1.0
    var dcconimage = {행복2: "http://openrct2.lastorder.xyz/dccon/rctcon/icon_1.gif",
        행복1: "http://openrct2.lastorder.xyz/dccon/rctcon/icon_2.gif",
        TheIlluminati: "https://static-cdn.jtvnw.net/emoticons/v1/145315/1.0"};

    //디시콘이 없다면 그냥 반환함
    if(typeof dcconimage[dcconkey] == "undefined") return match;
    else return "<img src=\"" + dcconimage[dcconkey] + "\" >";
}

function htmlEntities(str) {
    return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
}

connect_jsassist_lastorder();